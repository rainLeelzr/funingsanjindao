<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.funing.commonfn.dao.TranRecordDao">

	<insert id="save" useGeneratedKeys="true" keyProperty="id" parameterType="com.funing.commonfn.model.TranRecord">
		INSERT INTO TB_TRAN_RECORD (
			ID, ITEM_TYPE, QUANTITY, TRAN_TIMES, USER_ID, WAY
		) VALUES (
			#{id}, #{itemType}, #{quantity}, #{tranTimes}, #{userId}, #{way}
		)
	</insert>

	<delete id="delete" parameterType="com.funing.commonfn.model.TranRecord">
		DELETE FROM TB_TRAN_RECORD <include refid="CriteriaSQL" />
	</delete>

	<update id="update" parameterType="com.funing.commonfn.model.TranRecord">
		UPDATE TB_TRAN_RECORD <include refid="SetSQL" /> <include refid="CriteriaSQL" />
	</update>
  
	<select id="selectCount" parameterType="com.funing.commonfn.model.TranRecord" resultType="_long">
		SELECT COUNT(1) FROM TB_TRAN_RECORD <include refid="CriteriaSQL" />
	</select>

	<select id="selectList" parameterType="com.funing.commonfn.model.TranRecord" resultMap="TranRecordResultMap">
		SELECT * FROM TB_TRAN_RECORD <include refid="CriteriaSQL" /> <include refid="OrderbySQL" /> <include refid="LimitSQL" />
	</select>

	<resultMap id="TranRecordResultMap" type="com.funing.commonfn.model.TranRecord">
		<id property="id" column="ID" />
		<result property="itemType" column="ITEM_TYPE" />
		<result property="quantity" column="QUANTITY" />
		<result property="tranTimes" column="TRAN_TIMES" />
		<result property="userId" column="USER_ID" />
		<result property="way" column="WAY" />
	</resultMap>

	<sql id="SetSQL">
		<set>
			<if test="entity.itemType != null">ITEM_TYPE = #{entity.itemType},</if>
			<if test="entity.quantity != null">QUANTITY = #{entity.quantity},</if>
			<if test="entity.tranTimes != null">TRAN_TIMES = #{entity.tranTimes},</if>
			<if test="entity.userId != null">USER_ID = #{entity.userId},</if>
			<if test="entity.way != null">WAY = #{entity.way},</if>
		</set>
	</sql>

	<sql id="CriteriaSQL">
		<where>
			<if test="criteria != null and criteria.notEmpty">
				<foreach collection="criteria.criterions" item="criterion">
					<choose>
						<when test="criterion.noValue">
							and ${criterion.field} ${criterion.condition}
						</when>
						<when test="criterion.singleValue">
							and ${criterion.field} ${criterion.condition} #{criterion.value}
						</when>
						<when test="criterion.betweenValue">
							and ${criterion.field} ${criterion.condition} #{criterion.value} and #{criterion.value2}
						</when>
						<when test="criterion.listValue">
							and ${criterion.field} ${criterion.condition}
							<foreach collection="criterion.value" item="item" open="(" separator="," close=")">
								#{item}
							</foreach>
						</when>
					</choose>
				</foreach>
			</if>
		</where>
	</sql>

	<sql id="OrderbySQL">
		<if test="criteria != null and criteria.orderly">
			ORDER BY 
			<foreach collection="criteria.orderbies" item="orderby" separator=",">
				${orderby.field} ${orderby.value}
			</foreach>
		</if>
	</sql>

	<sql id="LimitSQL">
		<if test="criteria != null and criteria.pagination">
			LIMIT #{criteria.limit.value}, #{criteria.limit.value2}
		</if>
	</sql>

</mapper>